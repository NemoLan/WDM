##创建版本库，添加文件
初始化一个Git仓库，使用git init命令。
添加文件到Git仓库，分两步：
	第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；
	第二步，使用命令git commit，完成。

##查看文件状态
git status命令可以列出当前目录所有还没有被git管理（尚未git add）的文件和被git管理(已经git add)且被修改但还未提交(git commit)的文件。
git diff filename 顾名思义就是查看difference，显示修改内容
##版本回退
HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭：
	使用命令git reset --hard commit_id。
穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。
要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本。

##工作区和暂存区
我们把文件往Git版本库里添加的时候，是分两步执行的：
	第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；
	第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

##撤销修改：
场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，
		用命令git checkout -- filename.xx。

场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，
		第一步用命令git reset HEAD filename.xx，就回到了场景1，
		第二步按场景1操作。

场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。

##删除文件
1. 从版本库中删除该文件：先git rm filename 然后 git commit -m "word..."
	$ git rm test.txt
	rm 'test.txt'
	$ git commit -m "remove test.txt"
	[master d17efd8] remove test.txt
	 1 file changed, 1 deletion(-)
	 delete mode 100644 test.txt
2. 删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：
	$ git checkout -- test.txt

##远程仓库
要关联一个远程库，使用命令:
git remote add origin https://github.com/NemoLan/WDM.git
关联后，第一次推送master分支的所有内容,使用命令:
git push -u origin master；
此后，每次本地提交（git commit）后，只要推送最新修改，就可以使用命令：
git push origin master




